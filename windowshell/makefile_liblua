CC = gcc
AR = ar rv
RM = rm -f

#DEBUGFLAGS = -g3 -O0 -DDEBUG
DEBUGFLAGS = 
CFLAGS =

OS_NAME = $(shell uname -o)
LC_OS_NAME = $(shell echo $(OS_NAME) | tr '[A-Z]' '[a-z]')
ifeq ($(LC_OS_NAME), msys)
	CFLAGS = $(DEBUGFLAGS)
else
	CFLAGS = $(DEBUGFLAGS) -fPIC
endif


TARGET	= liblua53.a


INC = -I.

VMLUA_H = \
	vm/lua/lapi.h \
	vm/lua/lauxlib.h \
	vm/lua/lcode.h \
	vm/lua/lctype.h \
	vm/lua/ldebug.h \
	vm/lua/ldo.h \
	vm/lua/lfunc.h \
	vm/lua/lgc.h \
    vm/lua/llex.h \
	vm/lua/llimits.h \
	vm/lua/lmem.h \
	vm/lua/lobject.h \
	vm/lua/lopcodes.h \
	vm/lua/lparser.h \
	vm/lua/lprefix.h \
	vm/lua/lstate.h \
	vm/lua/lstring.h \
	vm/lua/ltable.h \
	vm/lua/ltm.h \
	vm/lua/lua.h \
	vm/lua/lua.hpp \
	vm/lua/luaconf.h \
	vm/lua/lualib.h \
	vm/lua/lundump.h \
	vm/lua/lvm.h \
	vm/lua/lzio.h 		

VMLUA_C = \
	vm/lua/lapi.c \
	vm/lua/lauxlib.c \
	vm/lua/lbaselib.c \
	vm/lua/lbitlib.c \
	vm/lua/lcode.c \
	vm/lua/lcorolib.c \
	vm/lua/lctype.c \
	vm/lua/ldblib.c \
	vm/lua/ldebug.c \
	vm/lua/ldo.c \
	vm/lua/ldump.c \
	vm/lua/lfunc.c \
	vm/lua/lgc.c \
	vm/lua/linit.c \
	vm/lua/liolib.c \
	vm/lua/llex.c \
	vm/lua/lmathlib.c \
	vm/lua/lmem.c \
	vm/lua/loadlib.c \
	vm/lua/lobject.c \
	vm/lua/lopcodes.c \
	vm/lua/loslib.c \
	vm/lua/lparser.c \
	vm/lua/lstate.c \
	vm/lua/lstring.c \
	vm/lua/lstrlib.c \
	vm/lua/ltable.c \
	vm/lua/ltablib.c \
	vm/lua/ltm.c \
	vm/lua/lundump.c \
	vm/lua/lutf8lib.c \
	vm/lua/lvm.c \
	vm/lua/lzio.c
	
OBJS =  \
	vm/lua/lapi.o \
	vm/lua/lauxlib.o \
	vm/lua/lbaselib.o \
	vm/lua/lbitlib.o \
	vm/lua/lcode.o \
	vm/lua/lcorolib.o \
	vm/lua/lctype.o \
	vm/lua/ldblib.o \
	vm/lua/ldebug.o \
	vm/lua/ldo.o \
	vm/lua/ldump.o \
	vm/lua/lfunc.o \
	vm/lua/lgc.o \
	vm/lua/linit.o \
	vm/lua/liolib.o \
	vm/lua/llex.o \
	vm/lua/lmathlib.o \
	vm/lua/lmem.o \
	vm/lua/loadlib.o \
	vm/lua/lobject.o \
	vm/lua/lopcodes.o \
	vm/lua/loslib.o \
	vm/lua/lparser.o \
	vm/lua/lstate.o \
	vm/lua/lstring.o \
	vm/lua/lstrlib.o \
	vm/lua/ltable.o \
	vm/lua/ltablib.o \
	vm/lua/ltm.o \
	vm/lua/lundump.o \
	vm/lua/lutf8lib.o \
	vm/lua/lvm.o \
	vm/lua/lzio.o 

default:all
$(OBJS):%o:%c
	$(CC) -c $(CFLAGS) $< -o $@ $(INC)

all:$(TARGET)

$(TARGET): $(OBJS)
	$(AR) $@  $^
		
clean:
	$(RM) $(TARGET) $(OBJS)